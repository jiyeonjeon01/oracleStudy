-- JOIN, CASCADE 
-----------------------------------------------------------------------------------
-- PDF 17 30쪽 예제
-- 학과 테이블 생성하기
DROP TABLE SUBJECT;
CREATE TABLE SUBJECT (
--    SUBCODE NUMBER(5) GENERATED ALWAYS AS IDENTITY, --PK
    CODE NUMBER(5) GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 10), --PK (1000부터 10씩 증가)
    SUBNO NUMBER(2) NOT NULL, -- UK / 학과번호(STUDENT 의 FK)
    NAME VARCHAR2(30) NOT NULL
);    
ALTER TABLE SUBJECT 
    ADD CONSTRAINT SUBJECT_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE SUBJECT 
    ADD CONSTRAINT SUBJECT_SUBNO_UNIQUE UNIQUE(SUBNO);

SELECT * 
FROM USER_CONSTRAINTS 
WHERE TABLE_NAME='SUBJECT';
     
INSERT INTO SUBJECT VALUES (DEFAULT, 01, '컴퓨터학과');
INSERT INTO SUBJECT VALUES (DEFAULT, 02, '교육학과');
INSERT INTO SUBJECT VALUES (DEFAULT, 03, '신문방송학과');
INSERT INTO SUBJECT VALUES (DEFAULT, 04, '인터넷비즈니스과');
INSERT INTO SUBJECT VALUES (DEFAULT, 05, '기술경영과');

SELECT *
FROM SUBJECT;


-- 학생 테이블을 생성한다
DROP TABLE STUDENT;
CREATE TABLE STUDENT (
--    STUCODE NUMBER(5) GENERATED ALWAYS AS IDENTITY, --PK
    CODE NUMBER(5),
    STUNO NUMBER(10) NOT NULL, --UK
    NAME VARCHAR2(10) NOT NULL,
    ID VARCHAR2(20) NOT NULL,
    PW VARCHAR2(30) NOT NULL,
    SUBNO NUMBER(2), -- FK
    PID VARCHAR2(30) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    ADDR VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(30) NOT NULL,
    SUBMIT DATE NOT NULL
);    
ALTER TABLE STUDENT 
    ADD CONSTRAINT STUDENT_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE STUDENT 
    ADD CONSTRAINT STUDENT_SUBNO_FK FOREIGN KEY(SUBNO) REFERENCES SUBJECT(SUBNO)ON DELETE CASCADE;
ALTER TABLE STUDENT
    ADD CONSTRAINT STUDENT_STUNO_UNIQUE UNIQUE(STUNO);
    

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='STUDENT';

-- 학생일련번호, 학번, 이름, 아이디, 비번, 학과번호, 주민번호, 핸드폰, 주소, 이메일, 등록일
-- 학번: 년도+학과+일련번호
INSERT INTO STUDENT VALUES (0001, 60100001, '김정수', 'javajsp', '1234', 01, '1956-1234', '010-0610-1234', '서울시 서대문구', 'javajsp@naver.com', sysdate);
INSERT INTO STUDENT VALUES (0002, 95010002, '김수현', 'jdbcmania', '5678', 02, '1975-5678', '010-9501-5678', '서울시 서초구', 'jdbcmania@naver.com', sysdate);
INSERT INTO STUDENT VALUES (0003, 98040003, '공지영', 'gonji', '9876', 01, '1978-9876', '010-9804-9876', '부산광역시 해운대구', 'gonji@naver.com', sysdate);
INSERT INTO STUDENT VALUES (0004, 20050004, '조수영', 'water', '4321', 04, '1982-4321', '010-0205-4321', '대전광역시 중구', 'water@naver.com', sysdate);
INSERT INTO STUDENT VALUES (0005, 94040005, '최경란', 'novel', '7654', 05, '1974-7654', '010-9404-7654', '경기도 수원시', 'novel@naver.com', sysdate);
INSERT INTO STUDENT VALUES (0006, 80020006, '안익태', 'korea', '1004', 03, '1988-1004', '010-0802-1004', '서울시 서초구', 'korea@naver.com', sysdate);

SELECT *
FROM STUDENT;


-- 과목 테이블을 생성한다. 
DROP TABLE LESSON;
CREATE TABLE LESSON (
    CODE NUMBER(5) GENERATED ALWAYS AS IDENTITY(START WITH 100 INCREMENT BY 10), -- PK
    LSNO CHAR(2) NOT NULL, --UK
    NAME VARCHAR(20) NOT NULL
);
ALTER TABLE LESSON
    ADD CONSTRAINT LESSON_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE LESSON
    ADD CONSTRAINT LESSON_LSNO_UNIQUE UNIQUE(LSNO);
-- [K-국어 / M-수학 / E-영어 / H-역사 / P-프로그래밍 / D-데이터베이스 / ED-교육학이론]     
ALTER TABLE LESSON
    ADD CONSTRAINT LESSON_LSNO_CK CHECK(LSNO IN ('K', 'M', 'E', 'H', 'P', 'D', 'ED'));
ALTER TABLE LESSON
    ADD CONSTRAINT LESSON_NAME_CK CHECK(NAME IN ('국어', '수학', '영어', '역사', '프로그래밍', '데이터베이스', '교육학이론'));
-- 조합 제한
ALTER TABLE LESSON
    ADD CONSTRAINT LESSON_LSNO_NAME_CK CHECK (
        (LSNO = 'K' AND NAME = '국어') OR
        (LSNO = 'M' AND NAME = '수학') OR
        (LSNO = 'E' AND NAME = '영어') OR
        (LSNO = 'H' AND NAME = '역사') OR
        (LSNO = 'P' AND NAME = '프로그래밍') OR
        (LSNO = 'D' AND NAME = '데이터베이스') OR
        (LSNO = 'ED' AND NAME = '교육학이론')
    );
SELECT * 
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='LESSON';

INSERT INTO LESSON VALUES(DEFAULT, 'K', '국어');
INSERT INTO LESSON VALUES(DEFAULT, 'M', '수학');
INSERT INTO LESSON VALUES(DEFAULT, 'E', '영어');
INSERT INTO LESSON VALUES(DEFAULT, 'H', '역사');
INSERT INTO LESSON VALUES(DEFAULT, 'P', '프로그래밍');
INSERT INTO LESSON VALUES(DEFAULT, 'D', '데이터베이스');
INSERT INTO LESSON VALUES(DEFAULT, 'ED', '교육학이론');

SELECT *
FROM LESSON;


-- 수강 테이블을 생성한다
-- 수강테이블에는 학번은 반드시 학생테이블에 있는 학번만 입력되어야 하고, 
-- 과목번호는 반드시 과목테이블에 있는 과목 번호만 입력되어야 한다. 
DROP TABLE TRAIN;   
CREATE TABLE TRAIN (
    CODE NUMBER(5) GENERATED ALWAYS AS IDENTITY(START WITH 10000 INCREMENT BY 1), -- PK
    STUNO NUMBER NOT NULL, -- FK REF STUDENT
    LSNO CHAR(2) NOT NULL, -- FK REF LESSON
    SECTION VARCHAR2(20) NOT NULL, -- CHECK
    TDATE DATE NOT NULL
);
ALTER TABLE TRAIN 
    ADD CONSTRAINT TRAIN_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE TRAIN 
    ADD CONSTRAINT TRAIN_SECTION_CK CHECK (SECTION IN ('교양', '전공', '부전공'));
ALTER TABLE TRAIN 
    ADD CONSTRAINT TRAIN_STUNO_FK FOREIGN KEY(STUNO) REFERENCES STUDENT(STUNO)ON DELETE CASCADE; 
ALTER TABLE TRAIN 
    ADD CONSTRAINT TRAIN_LSNO_FK 
    FOREIGN KEY(LSNO) REFERENCES LESSON(LSNO)
    ON DELETE CASCADE; 
ALTER TABLE TRAIN 
    ADD CONSTRAINT TRAIN_SECTION_LSNO_CK CHECK (
        (SECTION = '교양' AND LSNO IN ('K', 'M', 'E', 'H')) OR
        (SECTION = '전공' AND LSNO IN ('P', 'D')) OR
        (SECTION = '부전공')
);

SELECT *
FROM USER_CONSTRAINTS 
WHERE TABLE_NAME='TRAIN';

INSERT INTO TRAIN VALUES (DEFAULT, 60100001, 'K', '교양', SYSDATE);
INSERT INTO TRAIN VALUES (DEFAULT, 95010002, 'K', '교양', SYSDATE);
INSERT INTO TRAIN VALUES (DEFAULT, 95010002, 'M', '교양', SYSDATE);
INSERT INTO TRAIN VALUES (DEFAULT, 95010002, 'P', '전공', SYSDATE);
INSERT INTO TRAIN VALUES (DEFAULT, 20050004, 'P', '전공', SYSDATE);

SELECT *
FROM TRAIN;









    
-- 전체 조인 해보기
SELECT STU.STUNO, 
       STU.NAME AS STUDENT_NAME, 
       SUB.NAME AS SUBJECT_NAME,
       SUB.SUBNO,
       LS.NAME AS LESSON_NAME, 
       TR.SECTION, 
       TR.TDATE
FROM STUDENT STU
INNER JOIN SUBJECT SUB
    ON STU.SUBNO = SUB.SUBNO  -- 학생과 학과 번호가 일치하는 것
INNER JOIN TRAIN TR
    ON STU.STUNO = TR.STUNO   -- 학번 기준으로 수강 테이블과 조인
INNER JOIN LESSON LS
    ON TR.LSNO = LS.LSNO;     -- 과목 번호 기준으로 수강 테이블과 조인
